"""
Django settings for cryptofarm project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Загрузка переменных окружения из .env файла
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-change-this-in-production-environment')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '*').split(',')  # В продакшене заменить на реальные домены


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Сторонние приложения
    'django_extensions',  # Полезные инструменты разработки
    'rest_framework',    # REST API

    # Приложения проекта
    'users',
    'trees',
    'shop',
    'p2p',
    'referrals',
    'staking',
    'notifications',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.TelegramAuthMiddleware',  # Middleware для проверки Telegram авторизации
]

ROOT_URLCONF = 'cryptofarm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cryptofarm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Telegram Bot Settings
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', 'YOUR_BOT_TOKEN')
TELEGRAM_BOT_USERNAME = os.getenv('TELEGRAM_BOT_USERNAME', 'your_bot_username')

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# Константы для игры
GAME_SETTINGS = {
    'WATERING_DURATION': 5,  # Длительность полива в часах
    'AUTO_WATERING_PRICES': {
        24: 50,  # 24 часа = 50 рублей
        48: 90,  # 48 часов = 90 рублей
        72: 120, # 72 часа = 120 рублей
    },
    'FERTILIZER_PRICES': {
        1: 24,  # Уровень 1 = 24 рубля
        2: 36,  # Уровень 2 = 36 рублей
        3: 48,  # Уровень 3 = 48 рублей
        4: 60,  # Уровень 4 = 60 рублей
        5: 72,  # Уровень 5 = 72 рубля
    },
    'TREE_LEVELS': {
        1: {'branches': 0, 'income': 1.0},
        2: {'branches': 5, 'income': 1.5},
        3: {'branches': 12, 'income': 2.0},
        4: {'branches': 30, 'income': 2.5},
        5: {'branches': 75, 'income': 3.0},
    },
    'BRANCH_DROP_CHANCE': 0.1,  # 10% шанс выпадения ветки
    'STAKING_DURATION': 7,  # Длительность стейкинга в днях
    'STAKING_BONUS': 0.1,  # +10% к доходу
    'P2P_COMMISSION': 0.03,  # 3% комиссия с P2P сделок
    'ORDER_EXPIRY': 3,  # Ордера истекают через 3 дня
    'MIN_CF_FOR_STAKING': 300,  # Минимальное количество CF для стейкинга
}

CSRF_TRUSTED_ORIGINS = [
    "https://ff5b-213-230-86-59.ngrok-free.app",
]